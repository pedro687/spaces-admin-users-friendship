buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.flywaydb:flyway-mysql:8.5.10'
    }
}

plugins {
    id 'java-conventions'
    id 'jacoco-report-aggregation'
    id 'application'
    id 'org.springframework.boot' version '2.6.7'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'org.flywaydb.flyway' version '8.5.10'

}

group = 'com.spaces.user.svc.infrastructure'

bootJar {
    archiveFileName = "application.jar"
    destinationDirectory.set(file("${rootProject.buildDir}/libs"))
}


dependencies {
    implementation(project(":spaces-user-svc:domain"))
    implementation(project(":spaces-user-svc:application"))

    implementation 'mysql:mysql-connector-java:8.0.33'
    implementation('io.vavr:vavr:0.10.4')


    implementation('org.springframework.boot:spring-boot-starter-web') {
        exclude module: 'spring-boot-starter-tomcat'
    }
    implementation('org.springframework.boot:spring-boot-starter-undertow')
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation group: 'org.springdoc', name: 'springdoc-openapi-webmvc-core', version: '1.7.0'
    implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.7.0'
    testImplementation('org.testcontainers:testcontainers:1.17.6')

    testImplementation('org.testcontainers:mysql:1.17.6')
    testImplementation('org.testcontainers:junit-jupiter:1.17.6')
    testImplementation('org.flywaydb:flyway-core')
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    implementation('com.h2database:h2')

}

flyway {
    url = System.getenv('FLYWAY_DB') ?: 'jdbc:mysql://localhost:3306/spaces_users_admin?useTimezone=true&serverTimezone=UTC&createDatabaseIfNotExist=false&useSSL=false&allowPublicKeyRetrieval=true'
    user = System.getenv('FLYWAY_USER') ?: 'root'
    password = System.getenv('FLYWAY_PASSWORD') ?: 'docker'
}

testCodeCoverageReport {
    reports {
        xml {
            enabled true
            destination file("$rootDir/build/reports/jacoco/test/jacocoTestReport.xml")
        }
        html {
            enabled true
            destination file("$rootDir/build/reports/jacoco/test/")
        }
    }
}

tasks.named("jacocoTestReport") {
    dependsOn tasks.named("testCodeCoverageReport", JacocoReport)
}